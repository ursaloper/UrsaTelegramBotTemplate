from telebot.asyncio_handler_backends import State, StatesGroup
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from telebot.async_telebot import AsyncTeleBot

from database.mongodb import get_all_users
from utils.excel_export import export_users_to_excel, remove_excel_file

class AdminStates(StatesGroup):
    admin_menu = State()

def register_handlers(bot: AsyncTeleBot):
    @bot.callback_query_handler(func=lambda call: call.data == "start_admin_panel")
    async def handle_admin_menu(call):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
        """
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton("üìö –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö", callback_data="adm_work_with_db"))
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏, –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è.

        await bot.delete_message(call.message.chat.id, call.message.message_id)
        await bot.send_message(
            call.message.chat.id,
            "üö™ –í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
            reply_markup=markup
        )
        await bot.set_state(call.message.from_user.id, AdminStates.admin_menu, call.message.chat.id)

    # –ï—Å–ª–∏ –≤ –±—É–¥—É—â–µ–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –º–æ–∂–Ω–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
    # @bot.callback_query_handler(func=lambda call: call.data == "adm_work_with_db")
    # async def handle_work_with_db(call):
    #     markup = InlineKeyboardMarkup()
    #     markup.add(InlineKeyboardButton("üìä –í—ã–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö", callback_data="adm_export_db"))
    #
    #     await bot.send_message(
    #         call.message.chat.id,
    #         "üìö –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é:",
    #         reply_markup=markup
    #     )
    #
    # @bot.callback_query_handler(func=lambda call: call.data == "adm_export_db")
    # async def handle_export_db(call):
    #    await bot.answer_callback_query(call.id, "‚òëÔ∏è –ù–∞—á–∏–Ω–∞—é –≤—ã–≥—Ä—É–∑–∫—É...")
    #    await bot.send_message(call.message.chat.id, "‚è≥ –í—ã–≥—Ä—É–∂–∞—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
    #    
    #    users = await get_all_users()
    #    filename = await export_users_to_excel(users)
    #    
    #    if filename:
    #        try:
    #            with open(filename, 'rb') as file:
    #                await bot.send_document(call.message.chat.id, file, caption="‚ÑπÔ∏è –í–æ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö")
    #            await remove_excel_file(filename)
    #        except Exception as e:
    #            await bot.send_message(call.message.chat.id, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {str(e)}")
    #    else:
    #        await bot.send_message(call.message.chat.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.")